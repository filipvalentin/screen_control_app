@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject IJSRuntime JS
<PageTitle>Home</PageTitle>

<style>
	.navbar {
		border-bottom: 1px solid #d6d5d5;
		justify-content: center;
		height: 3.5em;
		min-height: 3.5em;
		display: flex;
		align-items: center;
		background: var(--mud-palette-appbar-background);
	}
</style>

<MudPaper Class="d-flex flex-column flex-grow-1" MaxHeight="100%" Elevation="0" Square>
	@*< MudAppBar Dense>
	<MudText Typo="Typo.h6" Class="m-2" Color="Color.Tertiary">Screen Control App</MudText>
	</MudAppBar> style="display: none;"*@
	<MudPaper Class="navbar px-4 d-flex flex-row gap-6" Elevation="0" Square>
		@* <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink> *@

		<MudText Class="m-2" style="color: #FFF;" @onclick="()=>signalRImplementation = SignalRImplementation.Choosing">Screen Control App</MudText>

		<MudPaper Class="d-flex flex-row gap-4 " Elevation="0" Style="background: #FFFFFF00;">
			<MudPaper Class="d-flex flex-row gap-3 px-2 py-1 align-center" Style="background: #FFFFFF50;">
				<MudTooltip Text="Trasnsfer time: the time it took to transfer a frame">
					<MudContainer Class="d-flex flex-row gap-1 px-0" Style="background: #0000;">
						<MudText Typo="Typo.body2" Class="m-2" Color="Color.Default">T:</MudText>
						<MudText id="transferTimeLabel" Typo="Typo.body2" Class="m-2" Color="Color.Default">@TransferTime</MudText>
						<MudText Typo="Typo.body2" Class="m-2" Color="Color.Default">ms</MudText>
						@* the id will be detected by the JS component, there's no other easy way *@
					</MudContainer>
				</MudTooltip>
				<MudTooltip Text="Render time: the time it took to render a frame">
					<MudContainer Class="d-flex flex-row gap-1 px-0" Style="background: #0000;">
						<MudText Typo="Typo.body2" Class="m-2" Color="Color.Default">R:</MudText>
						<MudText id="renderTimeLabel" Typo="Typo.body2" Class="m-2" Color="Color.Default">@RenderTime</MudText>
						<MudText Typo="Typo.body2" Class="m-2" Color="Color.Default">ms</MudText>
					</MudContainer>
				</MudTooltip>

			</MudPaper>
			<MudButton Variant="Variant.Filled" Color="Color.Error" Class="px-2" OnClick="Disconnect">
				<MudText Typo="Typo.body2">
					Disconnect
				</MudText>
			</MudButton>
		</MudPaper>
	</MudPaper>

	<MudPaper Class="flex-grow-1 d-flex flex-column align-center justify-center" Elevation="0" Square>
		@if (signalRImplementation == SignalRImplementation.BlazorWASM) {
			<ControlScreenComponent CancellationTokenSource="cancellationTokenSource"
									@bind-TransferTime="TransferTime"
									@bind-RenderTime="RenderTime" />
		}
		@if (signalRImplementation == SignalRImplementation.JS) {
			<ControlScreenComponentJs></ControlScreenComponentJs>
		}
		@if (signalRImplementation == SignalRImplementation.Choosing) {
			<MudPaper Class="d-flex flex-column align-center justify-center px-2 py-2" Elevation="4">
				<MudText>Choose the SignalR implementation:</MudText>
				<MudPaper Class="d-flex flex-row gap-4 px-2 pt-2" Elevation="0">
					<MudButton OnClick="() => signalRImplementation = SignalRImplementation.BlazorWASM" Variant="Variant.Filled" Color="Color.Primary">Blazor Implementation</MudButton>
					<MudButton OnClick="() => signalRImplementation = SignalRImplementation.JS" Variant="Variant.Filled" Color="Color.Primary">JS Implementation</MudButton>
				</MudPaper>
			</MudPaper>
		}
	</MudPaper>
</MudPaper>



@code {
	private CancellationTokenSource cancellationTokenSource = new();
	private string TransferTime = "0";
	private string RenderTime = "0";
	private enum SignalRImplementation { JS, BlazorWASM, Choosing }
	private SignalRImplementation signalRImplementation = SignalRImplementation.Choosing;
}

@functions {
	private void Disconnect() {
		cancellationTokenSource.Cancel();

	}

}
